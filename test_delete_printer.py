#!/usr/bin/python# -*- coding: UTF-8 -*-import timefrom commonlib.base_lib.mylog.mylog import logimport pytestfrom src.Common_Fun.mythred import exec_threadfrom src.TestCase.RcdcCase.WEB.printer_web.common_printer_web import *from src.TestData.RcdcData.web_erreor_msg.print_error_msg import ERROER_MSG_01from src.TestData.RcdcData.web_erreor_msg.printer_test_data import SHARE_MOE_SQL2, data_nameclass TestDeletePrinter(object):    @pytest.mark.publish    @pytest.mark.case_level_0    @pytest.mark.case_type_function    @pytest.mark.parametrize('open_printer_testdata2', ['S', ], indirect=True)    def test_delete_printer_01(self, open_printer_testdata2):        """        用例名称:正常删除存在的单个共享打印机（SHARE）配置，删除成功，并查询        接口名称:删除打印机配置        用例作者:        测试点:正常删除存在的单个共享打印机（SHARE）配置，删除成功，并查询        前置步骤:        执行步骤:        校验点:        """        result = common_detail_printer(id=open_printer_testdata2)        printer_web_common_assert(result=result, status="SUCCESS")        common_delete_printer(idarr=[open_printer_testdata2], describe='删除打印机配置[{}]成功'.format(data_name), wait_time=10)        result1 = common_detail_printer(id=open_printer_testdata2)        printer_web_common_assert(result=result1, status="ERROR", message='打印机配置不存在')    @pytest.mark.publish    @pytest.mark.case_level_0    @pytest.mark.case_type_function    @pytest.mark.parametrize('open_printer_testdata2', ['N', ], indirect=True)    def test_delete_printer_02(self, open_printer_testdata2):        """        用例名称:正常删除存在的单个网络打印机（NETWORK）配置，删除成功，并查询        接口名称:删除打印机配置        用例作者:        测试点:正常删除存在的单个网络打印机（NETWORK）配置，删除成功，并查询        前置步骤:        执行步骤:        校验点:        """        result = common_detail_printer(id=open_printer_testdata2)        printer_web_common_assert(result=result, status="SUCCESS")        common_delete_printer(idarr=[open_printer_testdata2], describe='删除打印机配置[{}]成功'.format(data_name), wait_time=10)        result1 = common_detail_printer(id=open_printer_testdata2)        printer_web_common_assert(result=result1, status="ERROR", message='打印机配置不存在')    @pytest.mark.publish    @pytest.mark.case_level_0    @pytest.mark.case_type_function    @pytest.mark.parametrize('open_printer_testdata2', ['M', ], indirect=True)    def test_delete_printer_03(self, open_printer_testdata2):        """        用例名称:正常删除存在的单个本地打印机-共享（LOCAL_SHARE）配置，删除成功，并查询        接口名称:删除打印机配置        用例作者:        测试点:正常删除存在的单个本地打印机-共享（LOCAL_SHARE）配置，删除成功，并查询        前置步骤:        执行步骤:        校验点:        """        result = common_detail_printer(id=open_printer_testdata2)        printer_web_common_assert(result=result, status="SUCCESS")        common_delete_printer(idarr=[open_printer_testdata2], describe='删除打印机配置[{}]成功'.format(data_name), wait_time=10)        result1 = common_detail_printer(id=open_printer_testdata2)        printer_web_common_assert(result=result1, status="ERROR", message='打印机配置不存在')    @pytest.mark.publish    @pytest.mark.case_level_0    @pytest.mark.case_type_function    @pytest.mark.parametrize('open_printer_testdata2', ['L', ], indirect=True)    def test_delete_printer_04(self, open_printer_testdata2):        """        用例名称:正常删除存在的单个本地打印机-不共享（LOCAL_UNSHARE）配置，删除成功，并查询        接口名称:删除打印机配置        用例作者:        测试点:正常删除存在的单个本地打印机-不共享（LOCAL_UNSHARE）配置，删除成功，并查询        前置步骤:        执行步骤:        校验点:        """        result = common_detail_printer(id=open_printer_testdata2)        printer_web_common_assert(result=result, status="SUCCESS")        common_delete_printer(idarr=[open_printer_testdata2], describe='删除打印机配置[{}]成功'.format(data_name), wait_time=10)        result1 = common_detail_printer(id=open_printer_testdata2)        printer_web_common_assert(result=result1, status="ERROR", message='打印机配置不存在')    @pytest.mark.publish    @pytest.mark.case_level_0    @pytest.mark.case_type_function    @pytest.mark.parametrize('open_printer_testdata2', ['S', ], indirect=True)    def test_delete_printer_05(self, open_printer_testdata2):        """        用例名称:单个共享打印机（SHARE）配置删除后再次删除，删除失败，并查询        接口名称:删除打印机配置        用例作者:        测试点:单个共享打印机（SHARE）配置删除后再次删除，删除失败，并查询        前置步骤:        执行步骤:        校验点:        """        result = common_detail_printer(id=open_printer_testdata2)        printer_web_common_assert(result=result, status="SUCCESS")        common_delete_printer(idarr=[open_printer_testdata2], describe='删除打印机配置[{}]成功'.format(data_name), wait_time=10,                              assr_type=1)        result2 = common_delete_printer(idarr=[open_printer_testdata2], describe='删除打印机配置[{}]失败'.format(data_name),                                        wait_time=10, assr_type=1)        printer_web_common_assert(result=result2, status="ERROR", message='打印机配置不存在')        result1 = common_detail_printer(id=open_printer_testdata2)        printer_web_common_assert(result=result1, status="ERROR", message='打印机配置不存在')    @pytest.mark.publish    @pytest.mark.case_level_0    @pytest.mark.case_type_function    @pytest.mark.parametrize('open_printer_testdata2', ['N', ], indirect=True)    def test_delete_printer_06(self, open_printer_testdata2):        """        用例名称:单个网络打印机（NETWORK）配置删除后再次删除，删除失败，并查询        接口名称:删除打印机配置        用例作者:        测试点:单个网络打印机（NETWORK）配置删除后再次删除，删除失败，并查询        前置步骤:        执行步骤:        校验点:        """        result = common_detail_printer(id=open_printer_testdata2)        printer_web_common_assert(result=result, status="SUCCESS")        common_delete_printer(idarr=[open_printer_testdata2], describe='删除打印机配置[{}]成功'.format(data_name), wait_time=10)        result2 = common_delete_printer(idarr=[open_printer_testdata2], describe='删除打印机配置[{}]失败'.format(data_name),                                        wait_time=10, assr_type=1)        printer_web_common_assert(result=result2, status="ERROR", message='打印机配置不存在')        result1 = common_detail_printer(id=open_printer_testdata2)        printer_web_common_assert(result=result1, status="ERROR", message='打印机配置不存在')    @pytest.mark.publish    @pytest.mark.case_level_0    @pytest.mark.case_type_function    @pytest.mark.parametrize('open_printer_testdata2', ['M', ], indirect=True)    def test_delete_printer_07(self, open_printer_testdata2):        """        用例名称:单个本地打印机-共享（LOCAL_SHARE）配置删除后再次删除，删除失败，并查询        接口名称:删除打印机配置        用例作者:        测试点:单个本地打印机-共享（LOCAL_SHARE）配置删除后再次删除，删除失败，并查询        前置步骤:        执行步骤:        校验点:        """        result = common_detail_printer(id=open_printer_testdata2)        printer_web_common_assert(result=result, status="SUCCESS")        common_delete_printer(idarr=[open_printer_testdata2], describe='删除打印机配置[{}]成功'.format(data_name), wait_time=10)        result2 = common_delete_printer(idarr=[open_printer_testdata2], describe='删除打印机配置[{}]失败'.format(data_name),                                        wait_time=10, assr_type=1)        printer_web_common_assert(result=result2, status="ERROR", message='打印机配置不存在')        result1 = common_detail_printer(id=open_printer_testdata2)        printer_web_common_assert(result=result1, status="ERROR", message='打印机配置不存在')    @pytest.mark.publish    @pytest.mark.case_level_0    @pytest.mark.case_type_function    @pytest.mark.parametrize('open_printer_testdata2', ['L', ], indirect=True)    def test_delete_printer_08(self, open_printer_testdata2):        """        用例名称:单个本地打印机-不共享（LOCAL_UNSHARE）配置删除后再次删除，删除失败，并查询        接口名称:删除打印机配置        用例作者:        测试点:单个本地打印机-不共享（LOCAL_UNSHARE）配置删除后再次删除，删除失败，并查询        前置步骤:        执行步骤:        校验点:        """        result = common_detail_printer(id=open_printer_testdata2)        printer_web_common_assert(result=result, status="SUCCESS")        common_delete_printer(idarr=[open_printer_testdata2], describe='删除打印机配置[{}]成功'.format(data_name), wait_time=10)        result2 = common_delete_printer(idarr=[open_printer_testdata2], describe='删除打印机配置[{}]失败'.format(data_name),                                        wait_time=10, assr_type=1)        printer_web_common_assert(result=result2, status="ERROR", message='打印机配置不存在')        result1 = common_detail_printer(id=open_printer_testdata2)        printer_web_common_assert(result=result1, status="ERROR", message='打印机配置不存在')    @pytest.mark.publish    @pytest.mark.case_level_0    @pytest.mark.case_type_function    def test_delete_printer_09(self):        """        用例名称:反复创建删除共享打印机（SHARE）配置10次，删除成功，并查询        接口名称:删除打印机配置        用例作者:        测试点:反复创建删除共享打印机（SHARE）配置10次，删除成功，并查询        前置步骤:        执行步骤:        校验点:        """        common_open_printer(status='true')        for i in range(10):            print("第{}次删除打印机".format(i))            add_printer(                printer_info="'8c122bcb-bba8-4638-9cc7-854496d80d03', 1235466, '阿斯顿法国红酒', 'ddddd3', 't', '配置', 'windows', '点点点', 'SHARE', 'sdf', '十点多', '10', '12.12.12.12', '2020-09-30 14:33:59', '2020-09-30 14:34:03', 1")            common_delete_printer(idarr=['8c122bcb-bba8-4638-9cc7-854496d80d03'], describe='删除打印机配置[配置]成功',                                  wait_time=10)        result = common_detail_printer(id='8c122bcb-bba8-4638-9cc7-854496d80d03')        printer_web_common_assert(result=result, status="ERROR", message='打印机配置不存在')    @pytest.mark.publish    @pytest.mark.case_level_0    @pytest.mark.case_type_function    def test_delete_printer_010(self):        """        用例名称:反复创建删除网络打印机（NETWORK）配置10次，删除成功，并查询        接口名称:删除打印机配置        用例作者:        测试点:反复创建删除网络打印机（NETWORK）配置10次，删除成功，并查询        前置步骤:        执行步骤:        校验点:        """        common_open_printer(status='true')        for i in range(10):            print("第{}次删除打印机".format(i))            add_printer(                printer_info="'8c122bcb-bba8-4638-9cc7-854496d80d03', 1235466, '阿斯顿法国红酒', 'ddddd3', 't', '配置', 'windows', '点点点', 'NETWORK', 'sdf', '十点多', '10', '12.12.12.12', '2020-09-30 14:33:59', '2020-09-30 14:34:03', 1")            common_delete_printer(idarr=['8c122bcb-bba8-4638-9cc7-854496d80d03'], describe='删除打印机配置[配置]成功',                                  wait_time=10)        result = common_detail_printer(id='8c122bcb-bba8-4638-9cc7-854496d80d03')        printer_web_common_assert(result=result, status="ERROR", message='打印机配置不存在')    @pytest.mark.publish    @pytest.mark.case_level_0    @pytest.mark.case_type_function    def test_delete_printer_011(self):        """        用例名称:反复创建删除本地打印机-共享（LOCAL_SHARE）配置10次，删除成功，并查询        接口名称:删除打印机配置        用例作者:        测试点:反复创建删除本地打印机-共享（LOCAL_SHARE）配置10次，删除成功，并查询        前置步骤:        执行步骤:        校验点:        """        common_open_printer(status='true')        for i in range(10):            print("第{}次删除打印机".format(i))            add_printer(                printer_info="'8c122bcb-bba8-4638-9cc7-854496d80d03', 1235466, '阿斯顿法国红酒', 'ddddd3', 't', '配置', 'windows', '点点点', 'LOCAL_SHARE', 'sdf', '十点多', '10', '12.12.12.12', '2020-09-30 14:33:59', '2020-09-30 14:34:03', 1")            common_delete_printer(idarr=['8c122bcb-bba8-4638-9cc7-854496d80d03'], describe='删除打印机配置[配置]成功',                                  wait_time=10)        result = common_detail_printer(id='8c122bcb-bba8-4638-9cc7-854496d80d03')        printer_web_common_assert(result=result, status="ERROR", message='打印机配置不存在')    @pytest.mark.publish    @pytest.mark.case_level_0    @pytest.mark.case_type_function    def test_delete_printer_012(self):        """        用例名称:反复创建删除本地打印机-不共享（LOCAL_UNSHARE）配置10次，删除成功，并查询        接口名称:删除打印机配置        用例作者:        测试点:反复创建删除本地打印机-不共享（LOCAL_UNSHARE）配置10次，删除成功，并查询        前置步骤:        执行步骤:        校验点:        """        common_open_printer(status='true')        for i in range(10):            print("第{}次删除打印机".format(i))            add_printer(                printer_info="'8c122bcb-bba8-4638-9cc7-854496d80d03', 1235466, '阿斯顿法国红酒', 'ddddd3', 't', '配置', 'windows', '点点点', 'LOCAL_UNSHARE', 'sdf', '十点多', '10', '12.12.12.12', '2020-09-30 14:33:59', '2020-09-30 14:34:03', 1")            common_delete_printer(idarr=['8c122bcb-bba8-4638-9cc7-854496d80d03'], describe='删除打印机配置[配置]成功',                                  wait_time=10)        result = common_detail_printer(id='8c122bcb-bba8-4638-9cc7-854496d80d03')        printer_web_common_assert(result=result, status="ERROR", message='打印机配置不存在')    @pytest.mark.publish    @pytest.mark.case_level_0    @pytest.mark.case_type_function    def test_delete_printer_013(self):        """        用例名称:批量删除打印机配置包括（共享打印机（SHARE），网络打印机（NETWORK），本地打印机-不共享（LOCAL_UNSHARE），本地打印机-共享（LOCAL_SHARE）），删除正常，并查询共享打印机（SHARE）信息        接口名称:删除打印机配置        用例作者:        测试点:批量删除打印机配置包括（共享打印机（SHARE），网络打印机（NETWORK），本地打印机-不共享（LOCAL_UNSHARE），本地打印机-共享（LOCAL_SHARE）），删除正常，并查询共享打印机（SHARE）信息        前置步骤:        执行步骤:        校验点:        """        common_open_printer(status='true')        pt = ['S', 'N', 'M', 'L']        delete_id = []        for i in range(len(pt)):            add_printer(printer_info=SHARE_MOE_SQL2.format(i, i, pt[i]))            delete_id.append(SHARE_MOE_SQL2.split(",")[0].strip("'").format(i))        common_delete_printer(idarr=delete_id, describe=ERROER_MSG_01.format(4, 0), wait_time=10)        result = common_detail_printer(id=SHARE_MOE_SQL2.split(",")[0].strip("'").format(0))        printer_web_common_assert(result=result, status="ERROR", message='打印机配置不存在')    @pytest.mark.publish    @pytest.mark.case_level_0    @pytest.mark.case_type_function    def test_delete_printer_014(self):        """        用例名称:批量删除打印机配置包括（共享打印机（SHARE），网络打印机（NETWORK），本地打印机-不共享（LOCAL_UNSHARE），本地打印机-共享（LOCAL_SHARE）），删除正常，并查询网络打印机（NETWORK）信息        接口名称:删除打印机配置        用例作者:        测试点:批量删除打印机配置包括（共享打印机（SHARE），网络打印机（NETWORK），本地打印机-不共享（LOCAL_UNSHARE），本地打印机-共享（LOCAL_SHARE）），删除正常，并查询网络打印机（NETWORK）信息        前置步骤:        执行步骤:        校验点:        """        common_open_printer(status='true')        pt = ['S', 'N', 'M', 'L']        delete_id = []        for i in range(len(pt)):            add_printer(printer_info=SHARE_MOE_SQL2.format(i, i, pt[i]))            delete_id.append(SHARE_MOE_SQL2.split(",")[0].strip("'").format(i))        common_delete_printer(idarr=delete_id, describe=ERROER_MSG_01.format(4, 0), wait_time=10)        result = common_detail_printer(id=SHARE_MOE_SQL2.split(",")[0].strip("'").format(1))        printer_web_common_assert(result=result, status="ERROR", message='打印机配置不存在')    @pytest.mark.publish    @pytest.mark.case_level_0    @pytest.mark.case_type_function    def test_delete_printer_015(self):        """        用例名称:批量删除打印机配置包括（共享打印机（SHARE），网络打印机（NETWORK），本地打印机-不共享（LOCAL_UNSHARE），本地打印机-共享（LOCAL_SHARE）），删除正常，并查询本地打印机-共享（LOCAL_SHARE）信息        接口名称:删除打印机配置        用例作者:        测试点:批量删除打印机配置包括（共享打印机（SHARE），网络打印机（NETWORK），本地打印机-不共享（LOCAL_UNSHARE），本地打印机-共享（LOCAL_SHARE）），删除正常，并查询本地打印机-共享（LOCAL_SHARE）信息        前置步骤:        执行步骤:        校验点:        """        common_open_printer(status='true')        pt = ['S', 'N', 'M', 'L']        delete_id = []        for i in range(len(pt)):            add_printer(printer_info=SHARE_MOE_SQL2.format(i, i, pt[i]))            delete_id.append(SHARE_MOE_SQL2.split(",")[0].strip("'").format(i))        common_delete_printer(idarr=delete_id, describe=ERROER_MSG_01.format(4, 0), wait_time=10)        result = common_detail_printer(id=SHARE_MOE_SQL2.split(",")[0].strip("'").format(2))        printer_web_common_assert(result=result, status="ERROR", message='打印机配置不存在')    @pytest.mark.publish    @pytest.mark.case_level_0    @pytest.mark.case_type_function    def test_delete_printer_016(self):        """        用例名称:批量删除打印机配置包括（共享打印机（SHARE），网络打印机（NETWORK），本地打印机-不共享（LOCAL_UNSHARE），本地打印机-共享（LOCAL_SHARE）），删除正常，并查询本地打印机-不共享（LOCAL_UNSHARE）信息        接口名称:删除打印机配置        用例作者:        测试点:批量删除打印机配置包括（共享打印机（SHARE），网络打印机（NETWORK），本地打印机-不共享（LOCAL_UNSHARE），本地打印机-共享（LOCAL_SHARE）），删除正常，并查询本地打印机-不共享（LOCAL_UNSHARE）信息        前置步骤:        执行步骤:        校验点:        """        common_open_printer(status='true')        pt = ['S', 'N', 'M', 'L']        delete_id = []        for i in range(len(pt)):            add_printer(printer_info=SHARE_MOE_SQL2.format(i, i, pt[i]))            delete_id.append(SHARE_MOE_SQL2.split(",")[0].strip("'").format(i))        common_delete_printer(idarr=delete_id, describe=ERROER_MSG_01.format(4, 0), wait_time=10)        result = common_detail_printer(id=SHARE_MOE_SQL2.split(",")[0].strip("'").format(3))        printer_web_common_assert(result=result, status="ERROR", message='打印机配置不存在')    # @pytest.mark.unpublish    # @pytest.mark.case_level_0    # @pytest.mark.case_type_function    # def test_delete_printer_017(self):    #     """    #     用例名称:删除已编辑过的共享打印机（SHARE）配置，并查询    #     接口名称:删除打印机配置    #     用例作者:    #     测试点:删除已编辑过的共享打印机（SHARE）配置，并查询    #     前置步骤:    #     执行步骤:    #     校验点:    #     """    #     result = common_delete_printer()    #     printer_web_common_assert(result=result)    #     已覆盖，test_edit_printer_01    # @pytest.mark.unpublish    # @pytest.mark.case_level_0    # @pytest.mark.case_type_function    # def test_delete_printer_018(self):    #     """    #     用例名称:删除已编辑过的网络打印机（NETWORK）配置，并查询    #     接口名称:删除打印机配置    #     用例作者:    #     测试点:删除已编辑过的网络打印机（NETWORK）配置，并查询    #     前置步骤:    #     执行步骤:    #     校验点:    #     """    #     result = common_delete_printer()    #     printer_web_common_assert(result=result)    #     已覆盖，test_edit_printer_02    # @pytest.mark.unpublish    # @pytest.mark.case_level_0    # @pytest.mark.case_type_function    # def test_delete_printer_019(self):    #     """    #     用例名称:删除已编辑过的本地打印机-不共享（LOCAL_UNSHARE）配置，并查询    #     接口名称:删除打印机配置    #     用例作者:    #     测试点:删除已编辑过的本地打印机-不共享（LOCAL_UNSHARE）配置，并查询    #     前置步骤:    #     执行步骤:    #     校验点:    #     """    #     result = common_delete_printer()    #     printer_web_common_assert(result=result)    #     已覆盖，test_edit_printer_03    # @pytest.mark.unpublish    # @pytest.mark.case_level_0    # @pytest.mark.case_type_function    # def test_delete_printer_020(self):    #     """    #     用例名称:删除已编辑过的共享打印机（SHARE）配置，并查询    #     接口名称:删除打印机配置    #     用例作者:    #     测试点:删除已编辑过的共享打印机（SHARE）配置，并查询    #     前置步骤:    #     执行步骤:    #     校验点:    #     """    #     result = common_delete_printer()    #     printer_web_common_assert(result=result)    #     已覆盖，test_edit_printer_04    # @pytest.mark.unpublish    # @pytest.mark.case_level_0    # @pytest.mark.case_type_function    # def test_delete_printer_021(self):    #     """    #     用例名称:打印机配置关闭的情况下，删除单个共享打印机（SHARE）配置，删除失败    #     接口名称:删除打印机配置    #     用例作者:    #     测试点:打印机配置关闭的情况下，删除单个共享打印机（SHARE）配置，删除失败    #     前置步骤:    #     执行步骤:    #     校验点:    #     """    #     result = common_delete_printer()    #     printer_web_common_assert(result=result)    #     接口不判断打印机状态，无需覆盖    # @pytest.mark.unpublish    # @pytest.mark.case_level_0    # @pytest.mark.case_type_function    # def test_delete_printer_022(self):    #     """    #     用例名称:打印机配置关闭的情况下，删除单个本地打印机-共享（LOCAL_SHARE）配置，删除失败    #     接口名称:删除打印机配置    #     用例作者:    #     测试点:打印机配置关闭的情况下，删除单个本地打印机-共享（LOCAL_SHARE）配置，删除失败    #     前置步骤:    #     执行步骤:    #     校验点:    #     """    #     result = common_delete_printer()    #     printer_web_common_assert(result=result)    #     接口不判断打印机状态，无需覆盖    # @pytest.mark.unpublish    # @pytest.mark.case_level_0    # @pytest.mark.case_type_function    # def test_delete_printer_023(self):    #     """    #     用例名称:打印机配置关闭的情况下，删除单个本地打印机-不共享（LOCAL_UNSHARE）配置，删除失败    #     接口名称:删除打印机配置    #     用例作者:    #     测试点:打印机配置关闭的情况下，删除单个本地打印机-不共享（LOCAL_UNSHARE）配置，删除失败    #     前置步骤:    #     执行步骤:    #     校验点:    #     """    #     result = common_delete_printer()    #     printer_web_common_assert(result=result)    #     接口不判断打印机状态，无需覆盖    # @pytest.mark.unpublish    # @pytest.mark.case_level_0    # @pytest.mark.case_type_function    # def test_delete_printer_024(self):    #     """    #     用例名称:打印机配置关闭的情况下，删除单个本地打印机-共享（LOCAL_SHARE）配置，删除失败    #     接口名称:删除打印机配置    #     用例作者:    #     测试点:打印机配置关闭的情况下，删除单个本地打印机-共享（LOCAL_SHARE）配置，删除失败    #     前置步骤:    #     执行步骤:    #     校验点:    #     """    #     result = common_delete_printer()    #     printer_web_common_assert(result=result)    #     接口不判断打印机状态，无需覆盖    # @pytest.mark.unpublish    # @pytest.mark.case_level_0    # @pytest.mark.case_type_function    # def test_delete_printer_025(self):    #     """    #     用例名称:无异常码，只返回成功和失败    #     接口名称:删除打印机配置    #     用例作者:    #     测试点:无异常码，只返回成功和失败    #     前置步骤:    #     执行步骤:    #     校验点:    #     """    #     result = common_delete_printer()    #     printer_web_common_assert(result=result)    #     无异常码，无需覆盖    # @pytest.mark.unpublish    # @pytest.mark.case_level_1    # @pytest.mark.case_type_scene    # def test_delete_printer_026(self):    #     """    #     用例名称:接口访问是否经过身份认证（即cookie或者证书的认证）    #     接口名称:删除打印机配置    #     用例作者:    #     测试点:接口访问是否经过身份认证（即cookie或者证书的认证）    #     前置步骤:    #     执行步骤:    #     校验点:    #     """    #     result = common_delete_printer()    #     printer_web_common_assert(result=result)    # @pytest.mark.unpublish    # @pytest.mark.case_level_1    # @pytest.mark.case_type_scene    # def test_delete_printer_027(self):    #     """    #     用例名称:admin用户接口访问成功    #     接口名称:删除打印机配置    #     用例作者:    #     测试点:admin用户接口访问成功    #     前置步骤:    #     执行步骤:    #     校验点:    #     """    #     result = common_delete_printer()    #     printer_web_common_assert(result=result)    #     无分级分权，无需覆盖    @pytest.mark.publish    @pytest.mark.case_level_2    @pytest.mark.case_type_performance    @pytest.mark.parametrize('open_printer_testdata2', ['S', ], indirect=True)    def test_delete_printer_028(self, open_printer_testdata2):        """        用例名称:接口响应时间不超过3秒        接口名称:删除打印机配置        用例作者:        测试点:接口响应时间不超过3秒        前置步骤:        执行步骤:        校验点:        """        result = common_detail_printer(id=open_printer_testdata2)        printer_web_common_assert(result=result, status="SUCCESS")        common_delete_printer(idarr=[open_printer_testdata2], describe='删除打印机配置[{}]成功'.format(data_name), wait_time=10)        t1 = time.time()        common_detail_printer(id=open_printer_testdata2)        t2 = time.time()        assert t2 - t1 < 3, '接口返回超过3秒'