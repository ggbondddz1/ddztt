#!/usr/bin/python# -*- coding: UTF-8 -*-import timeimport uuidfrom commonlib.base_lib.mylog.mylog import logfrom commonlib.base_lib.ssh.ssh_info import SshInfofrom jsonpath import jsonpathfrom src.Api_Lib.RcdcApi.WEB.printer_web import Printerwebfrom commonlib.base_lib.sql.sql_info import SqlInfofrom commonlib.base_lib.sql.sql_utils import SqlUtilsfrom src.TestCase.RcdcCase.WEB.msgct_msg import common_get_msgct_detail_infofrom src.TestData.RcdcData.db_base_info import RCDC_RCO_DEFAULT_DB, DB_PORT, RCDC_DEFAULT_DBfrom src.TestData.RcdcData.rcdc_server_info import RCDC_VIR_IP, RCDC_SERVER_PORT, RCDC_SERVER_PWD, RCDC_SERVER_USERfrom src.TestData.RcdcData.web_erreor_msg.printer_test_data import data_namedef printer_web_common_assert(result, msgArgArr=None, msgKey=None, message=None, content=None, status=None):    log('<<<<<<<<<<<<<printer_web公用验证')    if msgArgArr:        assert jsonpath(result, '$..msgArgArr')[0].__contains__(msgArgArr)    if msgKey:        assert jsonpath(result, '$..msgKey')[0].__contains__(msgKey)    if message:        assert jsonpath(result, '$..message')[0].__contains__(message)    if content:        assert jsonpath(result, '$..content')[0].__contains__(content)    assert jsonpath(result, '$..status')[0] == statusdef common_open_printer(status='true'):    """    开启打印机配置    :param status:    :return:    """    import gc    libs = Printerweb()    result1 = libs.open_printer()    result2 = libs.status_printer()    assert result2.json()['content'] == status    del libs    gc.collect()    return result1.json()def common_close_printer(status='false'):    """    关闭打印机配置    :param status:    :return:    """    import gc    libs = Printerweb()    result1 = libs.close_printer()    result2 = libs.status_printer()    assert result2.json()['content'] == status    del libs    gc.collect()    return result1.json()def common_delete_printer(idarr=["5666666666666666666666666"], describe='', wait_time=10, assr_type=0):    """    通过ID删除打印机配置    :param idarr:    :param describe:    :param wait_time:    :param assr_type:    :return:    """    libs = Printerweb()    data = libs.delete_printer_data(idarr=idarr)    result = libs.delete_printer(data=data)    if assr_type == 0:        taskid = result.json()['content']['taskId']        result1 = common_get_msgct_detail_info(msgrelationid=taskid, wait_time=wait_time)        assert result1['content']['describe'] .__contains__(describe)    return result.json()def common_detail_printer(id='213123123123'):    """    查看打印机配置详情    :param id:    :return:    """    libs = Printerweb()    data = libs.detail_printer_data(id=id)    result = libs.detail_printer(data=data)    return result.json()def common_list_printer(searchkeyword='配置', page=0, limit=100):    """    查看打印机配置列表    :param searchkeyword:    :param page:    :param limit:    :return:    """    libs = Printerweb()    data = libs.list_printer_data(searchkeyword=searchkeyword, page=page, limit=limit)    result = libs.list_printer(data=data)    return result.json()def common_edit_printer(configname='默认配置名', configdescription='默认描述', id=None):    """    编辑打印机配置    :param configname:    :param configdescription:    :param id:    :return:    """    libs = Printerweb()    data = libs.edit_printer_data(configname=configname, configdescription=configdescription, id=id)    result = libs.edit_printer(data=data)    return result.json()def add_printer(ip=RCDC_VIR_IP,                ssh_info=SshInfo(ip=RCDC_VIR_IP, port=RCDC_SERVER_PORT, user_name=RCDC_SERVER_USER,                                 user_pwd=RCDC_SERVER_PWD, root_name=RCDC_SERVER_USER,                                 root_pwd=RCDC_SERVER_PWD), sql_user=RCDC_DEFAULT_DB['username'],                sql_name=RCDC_DEFAULT_DB['db_name'],                sql_pwd=RCDC_DEFAULT_DB['passwd'], sql_port=DB_PORT,                printer_info="'{}', 1235466, '阿斯顿法国红酒', 'ddddd3', 't', '配置', 'windows', '点点点', 'N', 'sdf', '十点多', '10', '12.12.12.12', '2020-09-30 14:33:59', '2020-09-30 14:34:03', 1".format(                    str(uuid.uuid4()))):    """    数据库插入打印机配置数据    :param:    :return    """    sql_info = SqlInfo(ssh_info, sql_user, sql_pwd, sql_port, sql_name)    sql = "INSERT INTO public.t_rco_printer_manage VALUES ({})".format(printer_info)    sql_utils = SqlUtils(ip, sql_info)    sql_utils.sql_exec(sql, result_flag=0)    return printer_info.split(',')[0].replace('\'', '')if __name__ == "__main__":    pass    # printer_info = "'8c122bcb-bba8-4638-9cc7-854496d80d33', 1235466, '阿斯顿法国红酒', 'ddddd3', 't', '配置', 'windows', '点点点', '点点点', 'sdf', '十点多', '10', '12.12.12.12', '2020-09-30 14:33:59', '2020-09-30 14:34:03', 1"    #add_printer()    # print(printer_info.split(',')[0].replace('\'', ''))    common_list_printer(searchkeyword='11', page=[])    #common_edit_printer(configname='1w123', configdescription='12ddd',id='8c122bcb-bba8-4638-9cc7-854496d80d1')    #common_detail_printer(id='8c122bcb-bba8-4638-9cc7-854496d80d13')    #common_open_printer()    #common_close_printer()    #common_delete_printer(idarr=['8c122bcb-bba8-4638-9cc7-854496d80d13'], describe=ERROER_MSG_01.format(2, 0))    #common_delete_printer(idarr=['8c122bcb-bba8-4638-9cc7-854496d80d1'], describe='删除打印机配置[{}]成功'.format(data_name))